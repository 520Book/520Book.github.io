import{_ as n,o as s,c as a,e as t}from"./app.678d7e92.js";const p={},o=t(`<p>\u8FD9\u4E2A\u7C7B\u975E\u5E38\u6709\u7528\u3002\u5728<code>nodeJS</code>\u4E2D\uFF0C\u6709\u65F6\u4E3A\u4E86\u89E3\u7801\uFF0C\u9700\u8981\u5B89\u88C5\u7B2C\u4E09\u65B9\u7684<code>iconv-lite</code>\u5E93\uFF0C\u4F46\u662F<code>Deno</code>\u81EA\u5E26\u4E86<code>TextDecoder</code>\u7C7B\u7528\u6765\u89E3\u7801\uFF0C\u975E\u5E38\u65B9\u4FBF\u3002</p><p>\u6BD4\u5982\u4E00\u4E2A\u7F51\u9875\uFF0C\u5982\u679C\u91C7\u7528\u7684\u662F<code>gb2312</code>\u7684\u7F16\u7801\u65B9\u5F0F\uFF0C\u4EE5\u524D\u6211\u4EEC\u9700\u8981\u91C7\u7528\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> iconv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;iconv-lite&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">request</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;https://www.qqaiqin.com/&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> body</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iconv<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> <span class="token string">&quot;gb2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>Deno</code>\u4E0B\u9762\uFF0C\u6211\u4EEC\u5F88\u65B9\u4FBF\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.qqaiqin.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> uni8Arr <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> decoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextDecoder</span><span class="token punctuation">(</span><span class="token string">&quot;gb2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>uni8Arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),e=[o];function c(u,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","Deno\u4E2D\u7684TextDecoder\u7C7B.html.vue"]]);export{r as default};
