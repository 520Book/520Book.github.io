import{_ as n,o as s,c as a,e as t}from"./app.678d7e92.js";const p={},e=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> qiniu <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;qiniu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> mac <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">qiniu<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>digest<span class="token punctuation">.</span>Mac</span><span class="token punctuation">(</span>
  <span class="token string">&quot;CB6OW9&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Msix_agQo&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">qiniu<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> bucketManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">qiniu<span class="token punctuation">.</span>rs<span class="token punctuation">.</span>BucketManager</span><span class="token punctuation">(</span>mac<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> bucket <span class="token operator">=</span> <span class="token string">&quot;music&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// @param options \u5217\u4E3E\u64CD\u4F5C\u7684\u53EF\u9009\u53C2\u6570</span>
<span class="token comment">//                prefix    \u5217\u4E3E\u7684\u6587\u4EF6\u524D\u7F00</span>
<span class="token comment">//                marker    \u4E0A\u4E00\u6B21\u5217\u4E3E\u8FD4\u56DE\u7684\u4F4D\u7F6E\u6807\u8BB0\uFF0C\u4F5C\u4E3A\u672C\u6B21\u5217\u4E3E\u7684\u8D77\u70B9\u4FE1\u606F</span>
<span class="token comment">//                limit     \u6BCF\u6B21\u8FD4\u56DE\u7684\u6700\u5927\u5217\u4E3E\u6587\u4EF6\u6570\u91CF</span>
<span class="token comment">//                delimiter \u6307\u5B9A\u76EE\u5F55\u5206\u9694\u7B26</span>
<span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

bucketManager<span class="token punctuation">.</span><span class="token function">listPrefix</span><span class="token punctuation">(</span>bucket<span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> respBody<span class="token punctuation">,</span> respInfo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>respInfo<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5982\u679C\u8FD9\u4E2AnextMarker\u4E0D\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u8FD8\u6709\u672A\u5217\u4E3E\u5B8C\u6BD5\u7684\u6587\u4EF6\u5217\u8868\uFF0C\u4E0B\u6B21\u8C03\u7528listPrefix\u7684\u65F6\u5019\uFF0C</span>
    <span class="token comment">//\u6307\u5B9Aoptions\u91CC\u9762\u7684marker\u4E3A\u8FD9\u4E2A\u503C</span>
    <span class="token keyword">var</span> nextMarker <span class="token operator">=</span> respBody<span class="token punctuation">.</span>marker<span class="token punctuation">;</span>
    <span class="token keyword">var</span> commonPrefixes <span class="token operator">=</span> respBody<span class="token punctuation">.</span>commonPrefixes<span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>commonPrefixes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> items <span class="token operator">=</span> respBody<span class="token punctuation">.</span>items<span class="token punctuation">;</span>
    items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">down</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;nextMarker = &quot;</span> <span class="token operator">+</span> nextMarker<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>respInfo<span class="token punctuation">.</span>statusCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>respBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[e];function c(i,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","\u4E03\u725B\u4E91.html.vue"]]);export{k as default};
