import{_ as n,o as s,c as a,e as t}from"./app.678d7e92.js";const e={},o=t(`<h1 id="\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7528\u6CD5" aria-hidden="true">#</a> \u7528\u6CD5</h1><p><code>trim</code>\u65B9\u6CD5\u4F1A\u4ECE\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684<code>\u4E24\u7AEF</code>\u5220\u9664<code>\u7A7A\u767D\u5B57\u7B26</code>\u3002\u7A7A\u767D\u5B57\u7B26\u662F\u6307\u6240\u6709\u7684\u7A7A\u767D\u5B57\u7B26 (space\uFF0Ctab\uFF0C no-break space \u7B49) \u4EE5\u53CA\u6240\u6709\u884C\u7EC8\u6B62\u7B26\u5B57\u7B26\uFF08\u5982 LF\uFF0CCR\u7B49\uFF09\u3002</p><blockquote><p>\u6CE8\u610F\uFF1A \u8BE5\u65B9\u6CD5\u5E76\u4E0D\u4F1A\u5F71\u54CD\u5B57\u7B26\u4E32\u4E2D\u95F4\u7684\u7A7A\u767D\u5B57\u7B26\uFF01</p></blockquote><h1 id="\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a> \u8BED\u6CD5</h1><blockquote><p>String.trim()</p></blockquote><h2 id="\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u8FD4\u56DE\u503C</h2><p>\u4E00\u4E2A\u8C03\u7528\u5B57\u7B26\u4E32\u4E24\u7AEF\u53BB\u6389\u7A7A\u767D\u7684\u65B0\u5B57\u7B26\u4E32\u3002</p><h1 id="\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B" aria-hidden="true">#</a> \u5B9E\u4F8B</h1><h2 id="\u4F8B\u5B501" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B501" aria-hidden="true">#</a> \u4F8B\u5B501</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str1 <span class="token operator">=</span> <span class="token string">&quot;   hello   &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str2 <span class="token operator">=</span> <span class="token string">&quot;\\n   world&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str3 <span class="token operator">=</span> <span class="token string">&quot;hello   world&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \\n   world</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// world</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str3<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello   world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),p=[o];function c(l,i){return s(),a("div",null,p)}const r=n(e,[["render",c],["__file","trim.html.vue"]]);export{r as default};
