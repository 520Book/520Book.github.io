import{_ as a,o as n,c as s,e as t}from"./app.678d7e92.js";const e={},c=t(`<p>\u5230\u4E0A\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> result <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://xxxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u590D\u5236\u4EE3\u7801\u73B0\u5728\u6709\u4E00\u79CD\u66F4\u7B80\u5355\u7684\u65B9\u6CD5\u6765\u5B9E\u73B0\u5B83\uFF1A\u901A\u8FC7\u89E3\u6784\u8D4B\u503C\u7684\u65B9\u5F0F\u4ECE\u5BF9\u8C61\u6216\u6570\u7EC4\u4E2D\u83B7\u53D6\u4E00\u4E2A\u6216\u591A\u4E2A\u503C\uFF1A const { data } = await axios.get(...) \u590D\u5236\u4EE3\u7801\u4E5F\u53EF\u5BF9\u53D8\u91CF\u91CD\u547D\u540D\uFF1A const { data: newData } = await axios.get(...) \u590D\u5236\u4EE3\u7801\u53E6\u4E00\u79CD\u65B9\u6CD5\u662F\u5728\u89E3\u6784\u8D4B\u503C\u65F6\u6307\u5B9A\u9ED8\u8BA4\u503C\uFF0C\u8FD9\u6837\u505A\u53EF\u4EE5\u786E\u4FDD\u4EE3\u7801\u4E0D\u4F1A\u51FA\u73B0 undefined\uFF0C\u4E5F\u907F\u514D\u624B\u52A8\u68C0\u67E5\u53D8\u91CF\u7684\u9EBB\u70E6\u3002 const { id = 5 } = {} console.log(id) // 5 \u590D\u5236\u4EE3\u7801\u8FD9\u4E9B\u65B9\u6CD5\u4E5F\u53EF\u4EE5\u7528\u4E8E\u51FD\u6570\u53C2\u6570\uFF0C\u4F8B\u5982\uFF1A function calculate({ operands = [1, 2], type = &#39;addition&#39; } = {}) { return operands.reduce((acc, val) =&gt; { switch (type) { case &#39;addition&#39;: return acc + val case &#39;subtraction&#39;: return acc - val case &#39;multiplication&#39;: return acc * val case &#39;division&#39;: return acc / val } }, [&#39;addition&#39;, &#39;subtraction&#39;].includes(type) ? 0 : 1) } console.log(calculate()) // 3 console.log(calculate({ type: &#39;division&#39; })) // 0.5 console.log(calculate({ operands: [2, 3, 4], type: &#39;multiplication&#39; })) // 24 \u590D\u5236\u4EE3\u7801 ES6 \u5F15\u5165\u4E86\u89E3\u6784\u8D4B\u503C\u548C\u9ED8\u8BA4\u503C\uFF0C\u4F7F\u7528\u65F6\u8BF7\u8FDB\u884C\u8F6C\u6362\u3002</p>`,3),o=[c];function i(l,p){return n(),s("div",null,o)}const u=a(e,[["render",i],["__file","\u89E3\u6784\u8D4B\u503C.html.vue"]]);export{u as default};
