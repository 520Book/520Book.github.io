import{_ as n,o as s,c as a,e as t}from"./app.678d7e92.js";const p={},e=t(`<h1 id="\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#\u7B80\u4ECB" aria-hidden="true">#</a> \u7B80\u4ECB</h1><p><code>Promise</code>\uFF0C\u4ED6\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4E3B\u8981\u76EE\u7684\u662F\u4E3A\u4E86\u5904\u7406\u5F02\u6B65\u64CD\u4F5C\u3002<code>Promise</code>\u6709\u4E09\u79CD\u72B6\u6001\uFF1A<code>pending</code>\uFF08\u8FDB\u884C\u4E2D\uFF09\uFF0C<code>resolved</code>\uFF08\u5B8C\u6210\uFF09\uFF0C<code>rejected</code>\uFF08\u5931\u8D25\uFF09\u3002<code>promise</code>\u7684\u8FC7\u7A0B\u53EA\u6709\u4E24\u79CD\uFF1A<code>pending-&gt;resolved</code>\u6216\u8005<code>pending-&gt;rejected</code>\u3002</p><p><code>promise</code>\u5BF9\u8C61\u6709\u4E00\u4E2A\u6BD4\u8F83\u5E38\u7528\u7684<code>then</code>\u65B9\u6CD5\uFF0C\u7528\u6765\u6267\u884C\u56DE\u8C03\u51FD\u6570\uFF0C<code>then</code>\u65B9\u6CD5\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u662F\u6210\u529F\u7684<code>resolved</code>\u7684\u56DE\u8C03\uFF0C\u53E6\u4E00\u4E2A\u662F\u5931\u8D25<code>rejected</code>\u7684\u56DE\u8C03\uFF0C\u7B2C\u4E8C\u4E2A\u5931\u8D25\u7684\u56DE\u8C03\u53C2\u6570<code>\u53EF\u9009</code>\u3002\u5E76\u4E14<code>then</code>\u65B9\u6CD5\u91CC\u4E5F\u53EF\u4EE5\u8FD4\u56DE<code>promise</code>\u5BF9\u8C61\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528\u4E86\u3002</p><h1 id="\u7B80\u5355\u7684\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u7684\u5B9E\u4F8B" aria-hidden="true">#</a> \u7B80\u5355\u7684\u5B9E\u4F8B</h1><h2 id="\u5B9E\u4F8B1" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B1" aria-hidden="true">#</a> \u5B9E\u4F8B1</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u505A\u4E00\u4E9B\u5F02\u6B65\u64CD\u4F5C</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6267\u884C\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u968F\u4FBF\u4EC0\u4E48\u6570\u636E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u4EE3\u7801\uFF0C\u4F1A\u57282\u79D2\u540E\u8F93\u51FA\u201C\u6267\u884C\u5B8C\u6210\u201D\u3002\u6CE8\u610F\uFF01\u6211\u53EA\u662Fnew\u4E86\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u6CA1\u6709\u8C03\u7528\u5B83\uFF0C\u6211\u4EEC\u4F20\u8FDB\u53BB\u7684\u51FD\u6570\u5C31\u5DF2\u7ECF\u6267\u884C\u4E86\uFF0C\u8FD9\u662F\u9700\u8981\u6CE8\u610F\u7684\u4E00\u4E2A\u7EC6\u8282\u3002</p><p>Promise.resolve()\u65B9\u6CD5\u5141\u8BB8\u8C03\u7528\u65F6\u4E0D\u5E26\u53C2\u6570\uFF0C\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2Aresolved\u72B6\u6001\u7684 Promise \u5BF9\u8C61\u3002\u6240\u4EE5\uFF0C\u5982\u679C\u5E0C\u671B\u5F97\u5230\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u6BD4\u8F83\u65B9\u4FBF\u7684\u65B9\u6CD5\u5C31\u662F\u76F4\u63A5\u8C03\u7528Promise.resolve\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u7ACB\u5373resolve\u7684 Promise \u5BF9\u8C61\uFF0C\u662F\u5728\u672C\u8F6E\u201C\u4E8B\u4EF6\u5FAA\u73AF\u201D\uFF08event loop\uFF09\u7684\u7ED3\u675F\u65F6\uFF0C\u800C\u4E0D\u662F\u5728\u4E0B\u4E00\u8F6E\u201C\u4E8B\u4EF6\u5FAA\u73AF\u201D\u7684\u5F00\u59CB\u65F6\u3002</p><h2 id="\u5B9E\u4F8B1-1" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B1-1" aria-hidden="true">#</a> \u5B9E\u4F8B1</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> pro <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pro<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B9E\u4F8B2" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B2" aria-hidden="true">#</a> \u5B9E\u4F8B2</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> pro1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

pro1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6210\u529F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B9E\u4F8B2-1" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B2-1" aria-hidden="true">#</a> \u5B9E\u4F8B2</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> pro2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

pro2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true, \u6210\u529F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5B9E\u4F8B\u4F1A\u540C\u65F6\u8F93\u51FA<code>true</code>\u548C<code>\u6210\u529F</code>\u3002\u8FD9\u8BF4\u660E\u4EC0\u4E48\uFF1F\u8FD9\u8BF4\u660E\uFF0C<code>resolve</code>\u53EA\u662F\u56DE\u8C03\u51FD\u6570\uFF0C\u5E76\u4E0D\u662F\u8BF4\u7A0B\u5E8F\u6267\u884C\u5230<code>resolve</code>\u65F6\u5C31\u4F1A\u81EA\u52A8\u8FD4\u56DE\uFF0C\u7136\u540E\u8C03\u7528<code>resolve</code>\uFF01\uFF01\uFF01\u5F53\u65F6\u6211\u5C31\u662F\u8FD9\u91CC\u60F3\u5F53\u7136\u4E86\uFF01\uFF01\u6240\u4EE5\u5728<code>Promise</code>\u5BF9\u8C61\u4E2D\uFF0C\u8981\u60F3\u7EC8\u6B62\u540E\u7EED\u7684\u8BED\u53E5\u6267\u884C\uFF0C\u8FD8\u662F\u9700\u8981\u4F7F\u7528<code>return</code>\uFF01</p>`,17),o=[e];function c(u,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","promise\u5BF9\u8C61\u7528\u6CD5.html.vue"]]);export{r as default};
