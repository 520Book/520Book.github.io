import{_ as p,r as o,o as c,c as l,a as n,b as a,d as t,e}from"./app.678d7e92.js";const i={},u=e(`<h1 id="fetch-api-\u6559\u7A0B" tabindex="-1"><a class="header-anchor" href="#fetch-api-\u6559\u7A0B" aria-hidden="true">#</a> Fetch API \u6559\u7A0B</h1><p><code>fetch</code>\u662F<code>XMLHttpRequest</code>\u7684\u5347\u7EA7\u7248\uFF0C\u7528\u4E8E\u53D1\u51FA<code>HTTP</code>\u8BF7\u6C42\uFF0C\u6D4F\u89C8\u5668\u539F\u751F\u63D0\u4F9B\u8FD9\u4E2A\u5BF9\u8C61\u3002\u3002</p><h1 id="\u4E00\u3001\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u4E00\u3001\u57FA\u672C\u7528\u6CD5</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">[</span>option<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>fetch</code>\u7684\u529F\u80FD\u4E0E<code>XMLHttpRequest</code>\u57FA\u672C\u76F8\u540C\uFF0C\u4F46\u6709\u4E09\u4E2A\u4E3B\u8981\u7684\u5DEE\u5F02\u3002</p><p>\uFF081\uFF09<code>fetch</code>\u4F7F\u7528<code>Promise</code>\uFF0C\u4E0D\u4F7F\u7528\u56DE\u8C03\u51FD\u6570\uFF0C\u56E0\u6B64\u5927\u5927\u7B80\u5316\u4E86\u5199\u6CD5\uFF0C\u5199\u8D77\u6765\u66F4\u7B80\u6D01\u3002</p><p>\uFF082\uFF09<code>fetch</code>\u91C7\u7528\u6A21\u5757\u5316\u8BBE\u8BA1\uFF0CAPI\u5206\u6563\u5728\u591A\u4E2A\u5BF9\u8C61\u4E0A\uFF08Response \u5BF9\u8C61\u3001Request \u5BF9\u8C61\u3001Headers \u5BF9\u8C61\uFF09\uFF0C\u66F4\u5408\u7406\u4E00\u4E9B\u3002</p><p>\uFF083\uFF09<code>fetch</code>\u901A\u8FC7\u6570\u636E\u6D41\uFF08Stream \u5BF9\u8C61\uFF09\u5904\u7406\u6570\u636E\uFF0C\u53EF\u4EE5\u5206\u5757\u8BFB\u53D6\uFF0C\u6709\u5229\u4E8E\u63D0\u9AD8\u7F51\u7AD9\u6027\u80FD\u8868\u73B0\uFF0C\u51CF\u5C11\u5185\u5B58\u5360\u7528\uFF0C\u5BF9\u4E8E\u8BF7\u6C42\u5927\u6587\u4EF6\u6216\u8005\u7F51\u901F\u6162\u7684\u573A\u666F\u76F8\u5F53\u6709\u7528\u3002</p><p>\u5728\u7528\u6CD5\u4E0A\uFF0C<code>fetch</code>\u9ED8\u8BA4\u53D1\u51FA<code>GET</code>\u8BF7\u6C42\uFF0C\u8FD4\u56DE\u4E00\u4E2A<code>Promise</code>\u5BF9\u8C61\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.github.com/users/ruanyf&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">json</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Request Failed&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>fetch()</code>\u63A5\u6536\u5230\u7684<code>response</code>\u662F\u4E00\u4E2A<code>Stream</code>\u5BF9\u8C61\uFF0C<code>response.json()</code>\u662F\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\uFF0C\u53D6\u51FA\u6240\u6709\u5185\u5BB9\uFF0C\u5E76\u5C06\u5176\u8F6C\u4E3A JSON \u5BF9\u8C61\u3002</p><p><code>Promise</code>\u53EF\u4EE5\u4F7F\u7528<code>await</code>\u8BED\u6CD5\u6539\u5199\uFF0C\u4F7F\u5F97\u8BED\u4E49\u66F4\u6E05\u6670\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&quot;https://api.github.com/users/ruanyf&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Request Failed&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6CE8\u610F\uFF1A\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>await</code>\u8BED\u53E5\u5FC5\u987B\u653E\u5728<code>try...catch</code>\u91CC\u9762\uFF0C\u8FD9\u6837\u624D\u80FD\u6355\u6349\u5F02\u6B65\u64CD\u4F5C\u4E2D\u53EF\u80FD\u53D1\u751F\u7684\u9519\u8BEF\u3002</p></blockquote><p>\u540E\u6587\u90FD\u91C7\u7528<code>await</code>\u7684\u5199\u6CD5\uFF0C\u4E0D\u4F7F\u7528<code>.then()</code>\u7684\u5199\u6CD5\u3002</p><h1 id="\u4E8C\u3001response\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001response\u5BF9\u8C61" aria-hidden="true">#</a> \u4E8C\u3001Response\u5BF9\u8C61</h1><h2 id="_2-1-response\u5BF9\u8C61\u7684\u540C\u6B65\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-1-response\u5BF9\u8C61\u7684\u540C\u6B65\u5C5E\u6027" aria-hidden="true">#</a> 2.1 Response\u5BF9\u8C61\u7684\u540C\u6B65\u5C5E\u6027</h2><p><code>fetch</code>\u8BF7\u6C42\u6210\u529F\u4EE5\u540E\uFF0C\u5F97\u5230\u7684\u662F\u4E00\u4E2A<code>Response</code>\u5BF9\u8C61\uFF0C\u5B83\u5BF9\u5E94\u670D\u52A1\u5668\u7684<code>HTTP</code>\u56DE\u5E94\u3002</p><p>\u524D\u9762\u8BF4\u8FC7\uFF0C<code>Response</code>\u5305\u542B\u7684\u6570\u636E\u901A\u8FC7<code>Stream</code>\u63A5\u53E3\u5F02\u6B65\u8BFB\u53D6\uFF0C\u4F46\u662F\u5B83\u8FD8\u5305\u542B\u4E00\u4E9B\u540C\u6B65\u5C5E\u6027\uFF0C\u5BF9\u5E94<code>HTTP</code>\u56DE\u5E94\u7684\u6807\u5934\u4FE1\u606F<code>Headers</code>\uFF0C\u53EF\u4EE5\u7ACB\u5373\u8BFB\u53D6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/readme.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>response.status</code>\u548C<code>response.statusText</code>\u5C31\u662F\u540C\u6B65\u5C5E\u6027\uFF0C\u53EF\u4EE5\u7ACB\u5373\u8BFB\u53D6\u3002\u5177\u4F53\u5217\u8868\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u6807\u5934\u4FE1\u606F\u5C5E\u6027</th><th>\u7C7B\u578B</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>ok</td><td>bool</td><td>\u8868\u793A\u8BF7\u6C42\u662F\u5426\u6210\u529F\uFF0Ctrue\u5BF9\u5E94\u72B6\u6001\u7801200\u5230299\uFF0Cfalse\u5BF9\u5E94\u5176\u4ED6</td></tr><tr><td>status</td><td>number</td><td>HTTP\u7684\u72B6\u6001\u7801</td></tr><tr><td>statusText</td><td>string</td><td>HTTP\u7684\u72B6\u6001\u4FE1\u606F</td></tr><tr><td>url</td><td>string</td><td>\u8BF7\u6C42\u7684URL\u3002\u5982\u679CURL\u5B58\u5728\u8DF3\u8F6C\uFF0C\u8BE5\u5C5E\u6027\u8FD4\u56DE\u7684\u662F\u6700\u7EC8URL</td></tr><tr><td>redirected</td><td>bool</td><td>\u8868\u793A\u8BF7\u6C42\u662F\u5426\u53D1\u751F\u8FC7\u8DF3\u8F6C</td></tr><tr><td>type</td><td>string</td><td>\u8BF7\u6C42\u7684\u7C7B\u578B</td></tr></tbody></table><p><code>type</code>\u53EF\u80FD\u7684\u503C\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>basic</td><td>\u666E\u901A\u8BF7\u6C42\uFF0C\u5373\u540C\u6E90\u8BF7\u6C42</td></tr><tr><td>cors</td><td>\u8DE8\u57DF\u8BF7\u6C42</td></tr><tr><td>error</td><td>\u7F51\u7EDC\u9519\u8BEF\uFF0C\u4E3B\u8981\u7528\u4E8E Service Worker</td></tr><tr><td>opaque</td><td>\u5982\u679C<code>fetch</code>\u8BF7\u6C42\u7684<code>type</code>\u5C5E\u6027\u8BBE\u4E3A<code>no-cors</code>\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u8FD9\u4E2A\u503C\uFF0C\u8BE6\u89C1\u8BF7\u6C42\u90E8\u5206\u3002\u8868\u793A\u53D1\u51FA\u7684\u662F<code>\u7B80\u5355\u7684\u8DE8\u57DF\u8BF7\u6C42</code>\uFF0C\u7C7B\u4F3C<code>&lt;form&gt;</code>\u8868\u5355\u7684\u90A3\u79CD\u8DE8\u57DF\u8BF7\u6C42\u3002</td></tr><tr><td>opaqueredirect</td><td>\u5982\u679Cfetch\u8BF7\u6C42\u7684<code>redirect</code>\u5C5E\u6027\u8BBE\u4E3Amanual\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u8FD9\u4E2A\u503C\uFF0C\u8BE6\u89C1\u8BF7\u6C42\u90E8\u5206\u3002</td></tr></tbody></table><h2 id="_2-2-\u5224\u65AD\u8BF7\u6C42\u662F\u5426\u6210\u529F" tabindex="-1"><a class="header-anchor" href="#_2-2-\u5224\u65AD\u8BF7\u6C42\u662F\u5426\u6210\u529F" aria-hidden="true">#</a> 2.2 \u5224\u65AD\u8BF7\u6C42\u662F\u5426\u6210\u529F</h2>`,25),r={class:"custom-container danger"},d=e(`<p class="custom-container-title">\u6CE8\u610F</p><p><code>fetch</code>\u53D1\u51FA\u8BF7\u6C42\u4EE5\u540E\uFF0C\u6709\u4E00\u4E2A\u5F88\u91CD\u8981\u7684\u6CE8\u610F\u70B9\uFF1A\u53EA\u6709<code>\u7F51\u7EDC\u9519\u8BEF</code>\uFF0C\u6216\u8005<code>\u65E0\u6CD5\u8FDE\u63A5</code>\u65F6\u624D\u4F1A\u62A5\u9519\uFF0C\u5176\u4ED6\u60C5\u51B5\u90FD\u4E0D\u4F1A\u62A5\u9519\uFF0C\u800C\u662F\u8BA4\u4E3A\u8BF7\u6C42\u6210\u529F\u3002 \u4E5F\u5C31\u662F\u8BF4\uFF0C\u5373\u4F7F\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u72B6\u6001\u7801\u662F<code>4xx</code>\u6216<code>5xx</code>\uFF0C<code>fetch</code>\u4E5F\u4E0D\u4F1A\u62A5\u9519\uFF08\u5373<code>Promise</code>\u4E0D\u4F1A\u53D8\u4E3A<code>rejected</code>\u72B6\u6001\uFF09\u3002 :::</p><p>\u53EA\u6709\u901A\u8FC7<code>Response.status</code>\u5C5E\u6027\uFF0C\u5F97\u5230<code>HTTP</code>\u56DE\u5E94\u7684\u771F\u5B9E\u72B6\u6001\u7801\uFF0C\u624D\u80FD\u5224\u65AD\u8BF7\u6C42\u662F\u5426\u6210\u529F\u3002\u8BF7\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/readme.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>response.status</code>\u5C5E\u6027\u53EA\u6709\u7B49\u4E8E<code>2xx</code>\u624D\u80FD\u8BA4\u5B9A\u8BF7\u6C42\u6210\u529F\u3002\u8FD9\u91CC\u4E0D\u7528\u8003\u8651\u7F51\u5740\u8DF3\u8F6C\uFF08\u72B6\u6001\u7801\u4E3A 3xx\uFF09\uFF0C\u56E0\u4E3A<code>fetch</code>\u4F1A\u5C06\u8DF3\u8F6C\u7684\u72B6\u6001\u7801\u81EA\u52A8\u8F6C\u4E3A<code>200</code>\u3002</p><p>\u53E6\u4E00\u79CD\u65B9\u6CD5\u662F\u5224\u65AD<code>response.ok</code>\u662F\u5426\u4E3A<code>true</code>\u3002</p><p>if (response.ok) { // \u8BF7\u6C42\u6210\u529F } else { // \u8BF7\u6C42\u5931\u8D25 }</p><h2 id="_2-3-headers\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-3-headers\u5C5E\u6027" aria-hidden="true">#</a> 2.3 headers\u5C5E\u6027</h2><p><code>Response</code>\u5BF9\u8C61\u8FD8\u6709\u4E00\u4E2A<code>Response.headers</code>\u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A<code>Headers</code>\u5BF9\u8C61\uFF0C\u5BF9\u5E94<code>HTTP</code>\u56DE\u5E94\u7684\u6240\u6709\u6807\u5934\uFF0C\u53EF\u4EE5\u7528<code>for...of</code>\u8FDB\u884C\u904D\u5386\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> : </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="headers\u5BF9\u8C61\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#headers\u5BF9\u8C61\u7684\u65B9\u6CD5" aria-hidden="true">#</a> Headers\u5BF9\u8C61\u7684\u65B9\u6CD5</h3><table><thead><tr><th>\u65B9\u6CD5\u540D</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>Headers.get()</td><td>\u6839\u636E\u6307\u5B9A\u7684\u952E\u540D\uFF0C\u8FD4\u56DE\u952E\u503C</td></tr><tr><td>Headers.has()</td><td>\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u662F\u5426\u5305\u542B\u67D0\u4E2A\u6807\u5934</td></tr><tr><td>Headers.set()</td><td>\u5C06\u6307\u5B9A\u7684\u952E\u540D\u8BBE\u7F6E\u4E3A\u65B0\u7684\u952E\u503C\uFF0C\u5982\u679C\u8BE5\u952E\u540D\u4E0D\u5B58\u5728\u5219\u4F1A\u6DFB\u52A0</td></tr><tr><td>Headers.append()</td><td>\u6DFB\u52A0\u6807\u5934</td></tr><tr><td>Headers.delete()</td><td>\u5220\u9664\u6807\u5934</td></tr><tr><td>Headers.keys()</td><td>\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\uFF0C\u53EF\u4EE5\u4F9D\u6B21\u904D\u5386\u6240\u6709\u952E\u540D\u3002</td></tr><tr><td>Headers.values()</td><td>\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\uFF0C\u53EF\u4EE5\u4F9D\u6B21\u904D\u5386\u6240\u6709\u952E\u503C\u3002</td></tr><tr><td>Headers.entries()</td><td>\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\uFF0C\u53EF\u4EE5\u4F9D\u6B21\u904D\u5386\u6240\u6709\u952E\u503C\u5BF9\uFF08[key, value]\uFF09</td></tr><tr><td>Headers.forEach()</td><td>\u4F9D\u6B21\u904D\u5386\u6807\u5934\uFF0C\u6BCF\u4E2A\u6807\u5934\u90FD\u4F1A\u6267\u884C\u4E00\u6B21\u53C2\u6570\u51FD\u6570</td></tr></tbody></table><p>\u4E0A\u9762\u7684\u6709\u4E9B\u65B9\u6CD5\u53EF\u4EE5\u4FEE\u6539\u6807\u5934\uFF0C\u90A3\u662F\u56E0\u4E3A\u7EE7\u627F\u81EA<code>Headers</code>\u63A5\u53E3\u3002\u5BF9\u4E8E<code>HTTP\u56DE\u5E94</code>\u6765\u8BF4\uFF0C\u4FEE\u6539\u6807\u5934\u610F\u4E49\u4E0D\u5927\uFF0C\u51B5\u4E14\u5F88\u591A\u6807\u5934\u662F\u53EA\u8BFB\u7684\uFF0C\u6D4F\u89C8\u5668\u4E0D\u5141\u8BB8\u4FEE\u6539\u3002 \u8FD9\u4E9B\u65B9\u6CD5\u4E2D\uFF0C\u6700\u5E38\u7528\u7684\u662F<code>response.headers.get()</code>\uFF0C\u7528\u4E8E\u8BFB\u53D6\u67D0\u4E2A\u6807\u5934\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
res1<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// application/json; charset=utf-8</span>

<span class="token comment">// \u952E\u540D</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> myHeaders<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u952E\u503C</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> myHeaders<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
res2<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-4-\u8BFB\u53D6\u5185\u5BB9\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-4-\u8BFB\u53D6\u5185\u5BB9\u7684\u65B9\u6CD5" aria-hidden="true">#</a> 2.4 \u8BFB\u53D6\u5185\u5BB9\u7684\u65B9\u6CD5</h2><p>Response\u5BF9\u8C61\u6839\u636E\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u4E0D\u540C\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u63D0\u4F9B\u4E86\u4E0D\u540C\u7684\u8BFB\u53D6\u65B9\u6CD5\u3002</p><table><thead><tr><th>\u65B9\u6CD5\u540D</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>text()</td><td>\u5F97\u5230\u6587\u672C\u5B57\u7B26\u4E32</td></tr><tr><td>json()</td><td>\u5F97\u5230<code>JSON</code>\u5BF9\u8C61</td></tr><tr><td>blob()</td><td>\u5F97\u5230\u4E8C\u8FDB\u5236<code>Blob</code>\u5BF9\u8C61\uFF0C\u7528\u4E8E\u83B7\u53D6\u4E8C\u8FDB\u5236\u6587\u4EF6</td></tr><tr><td>formData()</td><td>\u5F97\u5230<code>FormData</code>\u8868\u5355\u5BF9\u8C61\uFF0C\u4E3B\u8981\u7528\u5728<code>Service Worker</code>\u91CC\u9762\uFF0C\u62E6\u622A\u7528\u6237\u63D0\u4EA4\u7684\u8868\u5355\uFF0C\u4FEE\u6539\u67D0\u4E9B\u6570\u636E\u4EE5\u540E\uFF0C\u518D\u63D0\u4EA4\u7ED9\u670D\u52A1\u5668\u3002</td></tr><tr><td>arrayBuffer()</td><td>\u5F97\u5230\u4E8C\u8FDB\u5236<code>ArrayBuffer</code>\u5BF9\u8C61\uFF0C\u4E3B\u8981\u7528\u4E8E\u83B7\u53D6\u6D41\u5A92\u4F53\u6587\u4EF6\u3002</td></tr></tbody></table><p>\u4E0A\u97625\u4E2A\u8BFB\u53D6\u65B9\u6CD5\u90FD\u662F<code>\u5F02\u6B65</code>\u7684\uFF0C\u8FD4\u56DE\u7684\u90FD\u662F<code>Promise</code>\u5BF9\u8C61\u3002\u5FC5\u987B\u7B49\u5230\u5F02\u6B65\u64CD\u4F5C\u7ED3\u675F\uFF0C\u624D\u80FD\u5F97\u5230\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u5B8C\u6574\u6570\u636E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/users.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> res1<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> body<span class="token punctuation">;</span>

<span class="token comment">// \u8BFB\u53D6\u56FE\u7247flower.jpg\u663E\u793A\u5728\u7F51\u9875\u4E0A</span>
<span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;flower.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> myBlob <span class="token operator">=</span> <span class="token keyword">await</span> res2<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> objectURL <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>myBlob<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> myImage <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myImage<span class="token punctuation">.</span>src <span class="token operator">=</span> objectURL<span class="token punctuation">;</span>

<span class="token comment">// \u76F4\u63A5\u83B7\u53D6\u56FE\u7247\u7684Base64\u7F16\u7801</span>
<span class="token keyword">let</span> myBlob <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">function</span> <span class="token function">getBase64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>myBlob<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function-variable function">onloadend</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span>
      reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;reader error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token keyword">let</span> base64data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>base64data<span class="token punctuation">)</span>

<span class="token comment">// \u83B7\u53D6\u97F3\u9891\u6587\u4EF6song.ogg\u7136\u540E\u5728\u7EBF\u64AD\u653E</span>
<span class="token keyword">const</span> audioCtx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>AudioContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> audioCtx<span class="token punctuation">.</span><span class="token function">createBufferSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> res3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;song.ogg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">await</span> res3<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> decodeData <span class="token operator">=</span> <span class="token keyword">await</span> audioCtx<span class="token punctuation">.</span><span class="token function">decodeAudioData</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
source<span class="token punctuation">.</span>buffer <span class="token operator">=</span> buffer<span class="token punctuation">;</span>
source<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>audioCtx<span class="token punctuation">.</span>destination<span class="token punctuation">)</span><span class="token punctuation">;</span>
source<span class="token punctuation">.</span>loop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-5-response-clone" tabindex="-1"><a class="header-anchor" href="#_2-5-response-clone" aria-hidden="true">#</a> 2.5 Response.clone()</h2><p><code>Stream</code>\u5BF9\u8C61\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\uFF0C\u8BFB\u53D6\u5B8C\u5C31\u6CA1\u4E86\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u524D\u4E00\u8282\u7684\u4E94\u4E2A\u8BFB\u53D6\u65B9\u6CD5\uFF0C<code>\u53EA\u80FD\u4F7F\u7528\u4E00\u4E2A</code>\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u5148\u4F7F\u7528\u4E86<code>response.text()</code>\uFF0C\u628A<code>Stream</code>\u8BFB\u5B8C\u4E86\u3002\u540E\u9762\u518D\u8C03\u7528<code>response.json()</code>\u5C31\u6CA1\u6709\u5185\u5BB9\u53EF\u8BFB\u4E86\uFF0C\u6240\u4EE5\u62A5\u9519\u3002</p><p><code>Response</code>\u5BF9\u8C61\u63D0\u4F9B<code>clone()</code>\u65B9\u6CD5\uFF0C\u521B\u5EFAResponse\u5BF9\u8C61\u7684<code>\u526F\u672C</code>\uFF0C\u5B9E\u73B0\u591A\u6B21\u8BFB\u53D6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> response1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;flowers.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u590D\u5236Response\u5BF9\u8C61</span>
<span class="token keyword">const</span> response2 <span class="token operator">=</span> response1<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> myBlob1 <span class="token operator">=</span> <span class="token keyword">await</span> response1<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> myBlob2 <span class="token operator">=</span> <span class="token keyword">await</span> response2<span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

image1<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>myBlob1<span class="token punctuation">)</span><span class="token punctuation">;</span>
image2<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>myBlob2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Response</code>\u5BF9\u8C61\u8FD8\u6709\u4E00\u4E2A<code>redirect()</code>\u65B9\u6CD5\uFF0C\u7528\u4E8E\u5C06<code>Response</code>\u7ED3\u679C\u91CD\u5B9A\u5411\u5230\u6307\u5B9A\u7684<code>URL</code>\u3002\u8BE5\u65B9\u6CD5\u4E00\u822C\u53EA\u7528\u5728<code>Service Worker</code>\u91CC\u9762\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u4ECB\u7ECD\u4E86\u3002</p><h2 id="_2-6-response-body-\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-6-response-body-\u5C5E\u6027" aria-hidden="true">#</a> 2.6 Response.body \u5C5E\u6027</h2><p><code>Response.body</code>\u5C5E\u6027\u662F<code>Response</code>\u5BF9\u8C61\u66B4\u9732\u51FA\u7684\u5E95\u5C42\u63A5\u53E3\uFF0C\u8FD4\u56DE\u4E00\u4E2A<code>ReadableStream</code>\u5BF9\u8C61\u4F9B\u7528\u6237\u64CD\u4F5C\u3002</p><p>\u5B83\u53EF\u4EE5\u7528\u6765\u5206\u5757\u8BFB\u53D6\u5185\u5BB9\uFF0C\u5E94\u7528\u4E4B\u4E00\u5C31\u662F<code>\u663E\u793A\u4E0B\u8F7D\u7684\u8FDB\u5EA6</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;flower.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> reader <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> done<span class="token punctuation">,</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Received </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> bytes</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C<code>response.body.getReader()</code>\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u3002\u8FD9\u4E2A\u904D\u5386\u5668\u7684<code>read()</code>\u65B9\u6CD5\u6BCF\u6B21\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8868\u793A\u672C\u6B21\u8BFB\u53D6\u7684\u5185\u5BB9\u5757\u3002</p><p>\u8FD9\u4E2A\u5BF9\u8C61\u7684<code>done</code>\u5C5E\u6027\u662F\u4E00\u4E2A<code>bool</code>\uFF0C\u7528\u6765\u5224\u65AD\u6709\u6CA1\u6709\u8BFB\u5B8C\u3002<code>value</code>\u5C5E\u6027\u662F\u4E00\u4E2A<code>arrayBuffer</code>\u6570\u7EC4\uFF0C\u8868\u793A\u5185\u5BB9\u5757\u7684\u5185\u5BB9\uFF0C\u800C<code>value.length</code>\u5C5E\u6027\u662F\u5F53\u524D\u5757\u7684\u5927\u5C0F\u3002</p><h1 id="\u4E09\u3001fetch\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001fetch\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570" aria-hidden="true">#</a> \u4E09\u3001fetch\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570</h1><h2 id="fetch\u914D\u7F6E\u5BF9\u8C61\u7684\u5B8C\u6574api" tabindex="-1"><a class="header-anchor" href="#fetch\u914D\u7F6E\u5BF9\u8C61\u7684\u5B8C\u6574api" aria-hidden="true">#</a> fetch\u914D\u7F6E\u5BF9\u8C61\u7684\u5B8C\u6574API</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/plain;charset=UTF-8&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token literal-property property">referrer</span><span class="token operator">:</span> <span class="token string">&quot;about:client&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">referrerPolicy</span><span class="token operator">:</span> <span class="token string">&quot;no-referrer-when-downgrade&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;cors&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token string">&quot;same-origin&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&quot;follow&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">integrity</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">keepalive</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">signal</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>fetch()</code>\u8BF7\u6C42\u7684\u5E95\u5C42\u7528\u7684\u662F<code>Request()</code>\u5BF9\u8C61\u7684\u63A5\u53E3\uFF0C\u53C2\u6570\u5B8C\u5168\u4E00\u6837\uFF0C\u56E0\u6B64\u4E0A\u9762\u7684<code>API</code>\u4E5F\u662F<code>Request()</code>\u7684<code>API</code>\u3002</p><p>\u8FD9\u4E9B\u5C5E\u6027\u91CC\u9762\uFF0Cheaders\u3001body\u524D\u9762\u5DF2\u7ECF\u7ED9\u8FC7\u793A\u4F8B\u4E86\uFF0C\u4E0B\u9762\u662F\u5176\u4ED6\u5C5E\u6027\u7684\u4ECB\u7ECD\u3002</p><h3 id="method" tabindex="-1"><a class="header-anchor" href="#method" aria-hidden="true">#</a> method</h3><p><code>method</code>\u5C5E\u6027\u6307\u5B9A<code>HTTP</code>\u8BF7\u6C42\u7684\u65B9\u6CD5\uFF0C<code>POST</code>\u3001<code>DELETE</code>\u3001<code>PUT</code>\u90FD\u5728\u8FD9\u4E2A\u5C5E\u6027\u8BBE\u7F6E\u3002</p><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache" aria-hidden="true">#</a> cache</h3><p><code>cache</code>\u5C5E\u6027\u6307\u5B9A\u5982\u4F55\u5904\u7406\u7F13\u5B58\u3002\u53EF\u80FD\u7684\u53D6\u503C\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u503C</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>default</td><td>\u9ED8\u8BA4\u503C\uFF0C\u5148\u5728\u7F13\u5B58\u91CC\u9762\u5BFB\u627E\u5339\u914D\u7684\u8BF7\u6C42</td></tr><tr><td>no-store</td><td>\u76F4\u63A5\u8BF7\u6C42\u8FDC\u7A0B\u670D\u52A1\u5668\uFF0C\u5E76\u4E14\u4E0D\u66F4\u65B0\u7F13\u5B58</td></tr><tr><td>reload</td><td>\u76F4\u63A5\u8BF7\u6C42\u8FDC\u7A0B\u670D\u52A1\u5668\uFF0C\u5E76\u4E14\u66F4\u65B0\u7F13\u5B58</td></tr><tr><td>no-cache</td><td>\u5C06\u670D\u52A1\u5668\u8D44\u6E90\u8DDF\u672C\u5730\u7F13\u5B58\u8FDB\u884C\u6BD4\u8F83\uFF0C\u6709\u65B0\u7684\u7248\u672C\u624D\u4F7F\u7528\u670D\u52A1\u5668\u8D44\u6E90\uFF0C\u5426\u5219\u4F7F\u7528\u7F13\u5B58</td></tr><tr><td>force-cache</td><td>\u7F13\u5B58\u4F18\u5148\uFF0C\u53EA\u6709\u4E0D\u5B58\u5728\u7F13\u5B58\u7684\u60C5\u51B5\u4E0B\uFF0C\u624D\u8BF7\u6C42\u8FDC\u7A0B\u670D\u52A1\u5668</td></tr><tr><td>only-if-cached</td><td>\u53EA\u68C0\u67E5\u7F13\u5B58\uFF0C\u5982\u679C\u7F13\u5B58\u91CC\u9762\u4E0D\u5B58\u5728\uFF0C\u5C06\u8FD4\u56DE504\u9519\u8BEF</td></tr></tbody></table><h3 id="mode" tabindex="-1"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> mode</h3><p>mode\u5C5E\u6027\u6307\u5B9A\u8BF7\u6C42\u7684\u6A21\u5F0F\u3002\u53EF\u80FD\u7684\u53D6\u503C\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u503C</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>cors</td><td>\u9ED8\u8BA4\u503C\uFF0C\u5141\u8BB8\u8DE8\u57DF\u8BF7\u6C42</td></tr><tr><td>same-origin</td><td>\u53EA\u5141\u8BB8\u540C\u6E90\u8BF7\u6C42</td></tr><tr><td>no-cors</td><td>\u53EA\u9650\u4E8E<code>GET</code>\u3001<code>POST</code>\u548C<code>HEAD</code>\uFF0C\u5E76\u4E14\u53EA\u80FD\u4F7F\u7528\u6709\u9650\u7684\u51E0\u4E2A\u7B80\u5355\u6807\u5934\uFF0C\u4E0D\u80FD\u6DFB\u52A0\u8DE8\u57DF\u7684\u590D\u6742\u6807\u5934\uFF0C\u76F8\u5F53\u4E8E\u63D0\u4EA4\u8868\u5355\u6240\u80FD\u53D1\u51FA\u7684\u8BF7\u6C42\u3002</td></tr></tbody></table><blockquote><p>no-cors\u53EF\u4EE5\u7528\u4E8E\u7B80\u5355\u7684\u8DE8\u57DF\u8BF7\u6C42\u3002</p></blockquote><h3 id="credentials" tabindex="-1"><a class="header-anchor" href="#credentials" aria-hidden="true">#</a> credentials</h3><p><code>credentials</code>\u5C5E\u6027\u6307\u5B9A\u662F\u5426\u53D1\u9001<code>Cookie</code>\u3002\u53EF\u80FD\u7684\u53D6\u503C\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u503C</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>same-origin</td><td>\u9ED8\u8BA4\u503C\uFF0C\u540C\u6E90\u8BF7\u6C42\u65F6\u53D1\u9001Cookie\uFF0C\u8DE8\u57DF\u8BF7\u6C42\u65F6\u4E0D\u53D1\u9001\u3002</td></tr><tr><td>include</td><td>\u4E0D\u7BA1\u540C\u6E90\u8BF7\u6C42\uFF0C\u8FD8\u662F<code>\u8DE8\u57DF</code>\u8BF7\u6C42\uFF0C\u4E00\u5F8B\u53D1\u9001Cookie\u3002</td></tr><tr><td>omit</td><td>\u4E00\u5F8B\u4E0D\u53D1\u9001\u3002</td></tr></tbody></table><blockquote><p><code>\u8DE8\u57DF</code>\u8BF7\u6C42\u53D1\u9001<code>Cookie</code>\uFF0C\u9700\u8981\u5C06<code>credentials</code>\u5C5E\u6027\u8BBE\u4E3A<code>include</code>\u3002</p></blockquote><h3 id="signal" tabindex="-1"><a class="header-anchor" href="#signal" aria-hidden="true">#</a> signal</h3><p><code>signal</code>\u5C5E\u6027\u6307\u5B9A\u4E00\u4E2A<code>AbortSignal</code>\u5B9E\u4F8B\uFF0C\u7528\u4E8E\u53D6\u6D88<code>fetch</code>\u8BF7\u6C42\u3002</p><h3 id="keepalive" tabindex="-1"><a class="header-anchor" href="#keepalive" aria-hidden="true">#</a> keepalive</h3><p><code>keepalive</code>\u5C5E\u6027\u7528\u4E8E\u9875\u9762\u5378\u8F7D\u65F6\uFF0C\u544A\u8BC9\u6D4F\u89C8\u5668\u5728\u540E\u53F0\u4FDD\u6301\u8FDE\u63A5\uFF0C\u7EE7\u7EED\u53D1\u9001\u6570\u636E\u3002</p><p>\u4E00\u4E2A\u5178\u578B\u7684\u573A\u666F\u5C31\u662F\uFF0C\u7528\u6237\u79BB\u5F00\u7F51\u9875\u65F6\uFF0C\u811A\u672C\u5411\u670D\u52A1\u5668\u63D0\u4EA4\u4E00\u4E9B\u7528\u6237\u884C\u4E3A\u7684\u7EDF\u8BA1\u4FE1\u606F\u3002\u8FD9\u65F6\uFF0C\u5982\u679C\u4E0D\u7528<code>keepalive</code>\u5C5E\u6027\uFF0C\u6570\u636E\u53EF\u80FD\u65E0\u6CD5\u53D1\u9001\uFF0C\u56E0\u4E3A\u6D4F\u89C8\u5668\u5DF2\u7ECF\u628A\u9875\u9762\u5378\u8F7D\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onunload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/analytics&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&quot;statistics&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">keepalive</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redirect" tabindex="-1"><a class="header-anchor" href="#redirect" aria-hidden="true">#</a> redirect</h3><p><code>redirect</code>\u5C5E\u6027\u6307\u5B9AHTTP\u8DF3\u8F6C\u7684\u5904\u7406\u65B9\u6CD5\u3002\u53EF\u80FD\u7684\u53D6\u503C\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u503C</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>follow</td><td>\u9ED8\u8BA4\u503C\uFF0C\u8DDF\u968FHTTP\u8DF3\u8F6C</td></tr><tr><td>error</td><td>\u5982\u679C\u53D1\u751F\u8DF3\u8F6C\uFF0Cfetch()\u5C31\u62A5\u9519</td></tr><tr><td>manual</td><td>\u4E0D\u8DDF\u968FHTTP\u8DF3\u8F6C\uFF0C\u4F46\u662F<code>response.url</code>\u5C5E\u6027\u4F1A\u6307\u5411\u65B0\u7684URL\uFF0C<code>response.redirected</code>\u5C5E\u6027\u4F1A\u53D8\u4E3A<code>true</code>\uFF0C\u7531\u5F00\u53D1\u8005\u81EA\u5DF1\u51B3\u5B9A\u540E\u7EED\u5982\u4F55\u5904\u7406\u8DF3\u8F6C\u3002</td></tr></tbody></table><h3 id="integrity" tabindex="-1"><a class="header-anchor" href="#integrity" aria-hidden="true">#</a> integrity</h3><p><code>integrity</code>\u5C5E\u6027\u6307\u5B9A\u4E00\u4E2A<code>\u54C8\u5E0C</code>\u503C\uFF0C\u7528\u4E8E\u68C0\u67E5HTTP\u56DE\u5E94\u4F20\u56DE\u7684\u6570\u636E\u662F\u5426\u7B49\u4E8E\u8FD9\u4E2A\u9884\u5148\u8BBE\u5B9A\u7684\u54C8\u5E0C\u503C\u3002</p><p>\u6BD4\u5982\uFF0C\u4E0B\u8F7D\u6587\u4EF6\u65F6\uFF0C\u68C0\u67E5\u6587\u4EF6\u7684 SHA-256 \u54C8\u5E0C\u503C\u662F\u5426\u76F8\u7B26\uFF0C\u786E\u4FDD\u6CA1\u6709\u88AB\u7BE1\u6539\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;http://site.com/file&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">integrity</span><span class="token operator">:</span> <span class="token string">&quot;sha256-abcdef&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="referrer" tabindex="-1"><a class="header-anchor" href="#referrer" aria-hidden="true">#</a> referrer</h3><p><code>referrer</code>\u5C5E\u6027\u7528\u4E8E\u8BBE\u5B9A\u8BF7\u6C42\u7684<code>referer</code>\u6807\u5934\u3002</p><p>\u8FD9\u4E2A\u5C5E\u6027\u53EF\u4EE5\u4E3A\u4EFB\u610F\u5B57\u7B26\u4E32\uFF0C\u4E5F\u53EF\u4EE5\u8BBE\u4E3A<code>\u7A7A\u5B57\u7B26\u4E32</code>\uFF08\u5373\u4E0D\u53D1\u9001referer\u6807\u5934\uFF09\u3002</p><h3 id="referrerpolicy" tabindex="-1"><a class="header-anchor" href="#referrerpolicy" aria-hidden="true">#</a> referrerPolicy</h3><p><code>referrerPolicy</code>\u5C5E\u6027\u7528\u4E8E\u8BBE\u5B9A<code>Referer</code>\u6807\u5934\u7684\u89C4\u5219\u3002\u53EF\u80FD\u7684\u53D6\u503C\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u503C</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>no-referrer-when-downgrade</td><td>\u9ED8\u8BA4\u503C\uFF0C\u603B\u662F\u53D1\u9001Referer\u6807\u5934\uFF0C\u9664\u975E\u4ECEHTTPS\u9875\u9762\u8BF7\u6C42HTTP\u8D44\u6E90\u65F6\u4E0D\u53D1\u9001\u3002</td></tr><tr><td>no-referrer</td><td>\u4E0D\u53D1\u9001Referer\u6807\u5934\u3002</td></tr><tr><td>origin</td><td>Referer\u6807\u5934\u53EA\u5305\u542B\u57DF\u540D\uFF0C\u4E0D\u5305\u542B\u5B8C\u6574\u7684\u8DEF\u5F84\u3002</td></tr><tr><td>origin-when-cross-origin</td><td>\u540C\u6E90\u8BF7\u6C42Referer\u6807\u5934\u5305\u542B\u5B8C\u6574\u7684\u8DEF\u5F84\uFF0C\u8DE8\u57DF\u8BF7\u6C42\u53EA\u5305\u542B\u57DF\u540D\u3002</td></tr><tr><td>same-origin</td><td>\u8DE8\u57DF\u8BF7\u6C42\u4E0D\u53D1\u9001Referer\uFF0C\u540C\u6E90\u8BF7\u6C42\u53D1\u9001\u3002</td></tr><tr><td>strict-origin</td><td>Referer\u6807\u5934\u53EA\u5305\u542B\u57DF\u540D\uFF0CHTTPS \u9875\u9762\u8BF7\u6C42 HTTP \u8D44\u6E90\u65F6\u4E0D\u53D1\u9001Referer\u6807\u5934\u3002</td></tr><tr><td>strict-origin-when-cross-origin</td><td>\u540C\u6E90\u8BF7\u6C42\u65F6Referer\u6807\u5934\u5305\u542B\u5B8C\u6574\u8DEF\u5F84\uFF0C\u8DE8\u57DF\u8BF7\u6C42\u65F6\u53EA\u5305\u542B\u57DF\u540D\uFF0CHTTPS \u9875\u9762\u8BF7\u6C42 HTTP \u8D44\u6E90\u65F6\u4E0D\u53D1\u9001\u8BE5\u6807\u5934\u3002</td></tr><tr><td>unsafe-url</td><td>\u4E0D\u7BA1\u4EC0\u4E48\u60C5\u51B5\uFF0C\u603B\u662F\u53D1\u9001Referer\u6807\u5934\u3002</td></tr></tbody></table><h1 id="\u56DB\u3001\u4E00\u4E9B\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u4E00\u4E9B\u5B9E\u4F8B" aria-hidden="true">#</a> \u56DB\u3001\u4E00\u4E9B\u5B9E\u4F8B</h1><h2 id="\u53D1\u9001post\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u53D1\u9001post\u8BF7\u6C42" aria-hidden="true">#</a> \u53D1\u9001POST\u8BF7\u6C42</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;Content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&quot;foo=bar&amp;lorem=ipsum&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6CE8\u610F\uFF0C\u6709\u4E9B\u6807\u5934\u4E0D\u80FD\u901A\u8FC7headers\u5C5E\u6027\u8BBE\u7F6E\uFF0C\u6BD4\u5982<code>Content-Length</code>\u3001<code>Cookie</code>\u3001<code>Host</code>\u7B49\u7B49\u3002\u5B83\u4EEC\u662F\u7531\u6D4F\u89C8\u5668\u81EA\u52A8\u751F\u6210\uFF0C\u65E0\u6CD5\u4FEE\u6539\u3002</p></blockquote><h2 id="\u63D0\u4EA4json\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u63D0\u4EA4json\u6570\u636E" aria-hidden="true">#</a> \u63D0\u4EA4JSON\u6570\u636E</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">surname</span><span class="token operator">:</span> <span class="token string">&quot;Smith&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/article/fetch/post/user&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json;charset=utf-8&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u63D0\u4EA4\u8868\u5355" tabindex="-1"><a class="header-anchor" href="#\u63D0\u4EA4\u8868\u5355" aria-hidden="true">#</a> \u63D0\u4EA4\u8868\u5355</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;form&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6587\u4EF6\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u4E0A\u4F20" aria-hidden="true">#</a> \u6587\u4EF6\u4E0A\u4F20</h2><p>\u5982\u679C\u8868\u5355\u91CC\u9762\u6709\u6587\u4EF6\u9009\u62E9\u5668\uFF0C\u53EF\u4EE5\u7528\u524D\u4E00\u4E2A\u4F8B\u5B50\u7684\u5199\u6CD5\uFF0C\u4E0A\u4F20\u7684\u6587\u4EF6\u5305\u542B\u5728\u6574\u4E2A\u8868\u5355\u91CC\u9762\uFF0C\u4E00\u8D77\u63D0\u4EA4\u3002</p><p>\u53E6\u4E00\u79CD\u65B9\u6CD5\u662F\u7528\u811A\u672C\u6DFB\u52A0\u6587\u4EF6\uFF0C\u6784\u9020\u51FA\u4E00\u4E2A\u8868\u5355\uFF0C\u8FDB\u884C\u4E0A\u4F20\uFF0C\u8BF7\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;input[type=&quot;file&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/avatars&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u4F20\u4E8C\u8FDB\u5236\u6587\u4EF6\u65F6\uFF0C\u4E0D\u7528\u4FEE\u6539\u6807\u5934\u7684<code>Content-Type</code>\uFF0C\u6D4F\u89C8\u5668\u4F1A\u81EA\u52A8\u8BBE\u7F6E\u3002</p><h2 id="\u76F4\u63A5\u4E0A\u4F20\u4E8C\u8FDB\u5236\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u76F4\u63A5\u4E0A\u4F20\u4E8C\u8FDB\u5236\u6570\u636E" aria-hidden="true">#</a> \u76F4\u63A5\u4E0A\u4F20\u4E8C\u8FDB\u5236\u6570\u636E</h2><p><code>fetch</code>\u4E5F\u53EF\u4EE5\u76F4\u63A5\u4E0A\u4F20\u4E8C\u8FDB\u5236\u6570\u636E\uFF0C\u5C06<code>Blob</code>\u6216<code>arrayBuffer</code>\u6570\u636E\u653E\u5728<code>body</code>\u5C5E\u6027\u91CC\u9762\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  canvasElem<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token string">&quot;image/png&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/article/fetch/post/image&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> blob<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53D6\u6D88fetch\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88fetch\u8BF7\u6C42" aria-hidden="true">#</a> \u53D6\u6D88fetch\u8BF7\u6C42</h2><p>\u5982\u679C\u4E2D\u9014\u60F3\u8981\u53D6\u6D88<code>fetch</code>\u8BF7\u6C42\uFF0C\u9700\u8981\u4F7F\u7528<code>AbortController</code>\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> signal <span class="token operator">=</span> controller<span class="token punctuation">.</span>signal<span class="token punctuation">;</span>

<span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  signal<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

signal<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;abort&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;abort!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53D6\u6D88</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>signal<span class="token punctuation">.</span>aborted<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>controller.abort()</code>\u65B9\u6CD5\u7528\u4E8E\u53D1\u51FA\u53D6\u6D88\u4FE1\u53F7\u3002\u8FD9\u65F6\u4F1A\u89E6\u53D1<code>abort</code>\u4E8B\u4EF6\uFF0C\u8FD9\u4E2A\u4E8B\u4EF6\u53EF\u4EE5\u76D1\u542C\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7<code>controller.signal.aborted</code>\u5C5E\u6027\u5224\u65AD\u53D6\u6D88\u4FE1\u53F7\u662F\u5426\u5DF2\u7ECF\u53D1\u51FA\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A1\u79D2\u540E\u81EA\u52A8\u53D6\u6D88\u8BF7\u6C42\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/long-operation&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">signal</span><span class="token operator">:</span> controller<span class="token punctuation">.</span>signal<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">&quot;AbortError&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Aborted!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u53C2\u8003\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u94FE\u63A5" aria-hidden="true">#</a> \u53C2\u8003\u94FE\u63A5</h1>`,92),k={href:"https://javascript.info/fetch",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/node-fetch/node-fetch",target:"_blank",rel:"noopener noreferrer"},h={href:"https://developers.google.com/web/updates/2015/03/introduction-to-fetch",target:"_blank",rel:"noopener noreferrer"},b={href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",target:"_blank",rel:"noopener noreferrer"},m={href:"https://developerhowto.com/2019/09/14/javascript-fetch-api/",target:"_blank",rel:"noopener noreferrer"};function f(y,g){const s=o("ExternalLinkIcon");return c(),l("div",null,[u,n("div",r,[d,n("ul",null,[n("li",null,[n("a",k,[a("Network requests: Fetch"),t(s)])]),n("li",null,[n("a",v,[a("node-fetch"),t(s)])]),n("li",null,[n("a",h,[a("Introduction to fetch()"),t(s)])]),n("li",null,[n("a",b,[a("Using Fetch"),t(s)])]),n("li",null,[n("a",m,[a("Javascript Fetch API: The XMLHttpRequest evolution"),t(s)])])])])])}const q=p(i,[["render",f],["__file","Fetch API \u6559\u7A0B.html.vue"]]);export{q as default};
