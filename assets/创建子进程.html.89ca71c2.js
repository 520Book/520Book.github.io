import{_ as n,o as s,c as a,e as p}from"./app.678d7e92.js";const t={},e=p(`<h1 id="_1-\u4F7F\u7528deno-run\u521B\u5EFA\u5B50\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#_1-\u4F7F\u7528deno-run\u521B\u5EFA\u5B50\u8FDB\u7A0B" aria-hidden="true">#</a> 1. \u4F7F\u7528Deno.run\u521B\u5EFA\u5B50\u8FDB\u7A0B</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u5B50\u8FDB\u7A0B</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> Deno<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;echo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u5F85\u5B8C\u6210</span>
<span class="token keyword">await</span> p<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u8FD0\u884C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ deno run --allow-run ./main.ts
hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6CE8\u610F\uFF1A\u8FD9\u4E2A\u5B9E\u4F8B\u5728<code>Windows</code>\u7CFB\u7EDF\u4E0A\u4F1A\u51FA\u9519\uFF0C\u56E0\u4E3A<code>echo</code>\u4EC5\u4EC5\u662FWindows\u7684\u5185\u5EFA\u547D\u4EE4\uFF0C\u4E0D\u662F\u72EC\u7ACB\u7684<code>\u53EF\u6267\u884C\u6587\u4EF6</code>\uFF01</p></blockquote><h1 id="_2-\u5982\u4F55\u8C03\u7528\u5176\u5B83ts\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-\u5982\u4F55\u8C03\u7528\u5176\u5B83ts\u6587\u4EF6" aria-hidden="true">#</a> 2. \u5982\u4F55\u8C03\u7528\u5176\u5B83ts\u6587\u4EF6</h1><p>\u6211\u4EEC\u5148\u5199\u4E00\u4E2A<code>main.ts</code>\u7684\u4E3B\u6587\u4EF6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Deno<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;deno&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./son.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5199\u4E00\u4E2Ason.ts\u7684\u6587\u4EF6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;It is son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7136\u540E\u8FD0\u884C\u547D\u4EE4\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno run --allow-run .<span class="token punctuation">\\</span>main.ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5E0C\u671B\u770B\u5230\u8F93\u51FA\uFF0C\u4E8B\u5B9E\u4E0A\uFF0C\u6CA1\u6709\u4EFB\u4F55\u8F93\u51FA\uFF01\u8FD9\u662F\u4E3A\u4EC0\u4E48\uFF1F</p><p>\u56E0\u4E3A\u4E3B\u8FDB\u7A0B\u6CA1\u6709\u7B49\u5F85\u5B50\u8FDB\u7A0B\uFF0C\u81EA\u5DF1\u8FD0\u884C\u5B8C\u540E\u5C31\u7ED3\u675F\u4E86\uFF0C\u6240\u4EE5\u770B\u4E0D\u5230\u8F93\u51FA\u3002\u90A3\u5982\u4F55\u624D\u80FD\u770B\u5230\u8F93\u51FA\u7ED3\u679C\u5462\uFF1F\u9664\u4E86\u53EF\u4EE5\u4F7F\u7528\u4E0A\u9762<code>await p.status()</code>\u7684\u65B9\u6CD5\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u8BA9\u4E3B\u8FDB\u7A0B\u8FD0\u884C\u7684\u65F6\u95F4\u957F\u4E00\u70B9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">delay <span class="token operator">=</span> <span class="token number">1000</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Deno<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;deno&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./son.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-\u4F7F\u7528piped\u7BA1\u9053" tabindex="-1"><a class="header-anchor" href="#_3-\u4F7F\u7528piped\u7BA1\u9053" aria-hidden="true">#</a> 3. \u4F7F\u7528piped\u7BA1\u9053</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> Deno<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&#39;deno&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;run&#39;</span><span class="token punctuation">,</span>  <span class="token string">&#39;./son.ts&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">stderr</span><span class="token operator">:</span> <span class="token string">&#39;piped&#39;</span><span class="token punctuation">,</span> 
  <span class="token literal-property property">stdout</span><span class="token operator">:</span> <span class="token string">&#39;piped&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">const</span> <span class="token literal-property property">rawOutput</span><span class="token operator">:</span>Uint8Array <span class="token operator">=</span> <span class="token keyword">await</span> p<span class="token punctuation">.</span><span class="token function">output</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextDecoder</span><span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>rawOutput<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u8FD9\u4E2A\u5B9E\u4F8B\u770B\u4F3C\u5904\u7406\u4E86\u8F93\u51FA\u7684\u95EE\u9898\uFF0C\u4F46\u662F\u53EA\u80FD\u5F53\u5B50\u7A0B\u5E8F\u8FD0\u884C\u5B8C\u6210\u4E4B\u540E\u624D\u80FD\u663E\u793A\u8F93\u51FA\u7ED3\u679C\uFF0C\u8FD9\u4E2A\u4E0D\u662F\u6211\u60F3\u8981\u7684\u6548\u679C\uFF0C\u6211\u7684\u5B50\u7A0B\u5E8F\u4F1A\u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u8F93\u51FA\u7ED3\u679C\uFF0C\u5E76\u4E14\u80FD\u591F\u63A5\u6536\u7236\u8FDB\u7A0B\u7684\u8F93\u5165\uFF0C\u4F60\u90FD\u8FD0\u884C\u5B8C\u4E86\u624D\u663E\u793A\u51FA\u6765\u8FD8\u6709\u4EC0\u4E48\u7528\u3002</p><p>\u6211\u4EEC\u4FEE\u6539<code>son.ts</code>\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">delay <span class="token operator">=</span> <span class="token number">1000</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6B21\u6211\u4EEC\u53D1\u73B0\uFF0C\u6211\u4EEC\u9700\u8981\u8DB3\u8DB3\u7B49\u591F\u5341\u79D2\u949F\uFF0C\u624D\u80FD\u4E00\u6B21\u6027\u770B\u5230\u7ED3\u679C\uFF01\u8FD9\u662F\u5F88\u8BA9\u4EBA\u5934\u75BC\u7684\u3002\u90A3\u5982\u4F55\u5B9E\u65F6\u5F97\u5230\u5B50\u8FDB\u7A0B\u7684\u8F93\u51FA\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> readStringDelim <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;https://deno.land/std@0.93.0/io/mod.ts&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> p <span class="token operator">=</span> Deno<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">cmd</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;deno&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./son.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">stderr</span><span class="token operator">:</span> <span class="token string">&quot;piped&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">stdout</span><span class="token operator">:</span> <span class="token string">&quot;piped&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">let</span> line <span class="token keyword">of</span> <span class="token function">readStringDelim</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

p<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;It is done.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u6682\u65F6\u89E3\u51B3\u4E86\uFF0C\u4F46\u662F\u4F9D\u7136\u4F1A\u963B\u585E\u4E3B\u8FDB\u7A0B\uFF0C\u4E0D\u77E5\u9053\u6709\u6CA1\u6709\u66F4\u597D\u7684\u529E\u6CD5\u89E3\u51B3\u3002</p>`,23),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","\u521B\u5EFA\u5B50\u8FDB\u7A0B.html.vue"]]);export{r as default};
