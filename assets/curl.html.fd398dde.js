import{_ as t,r as e,o,c as p,a as n,b as s,d as c,e as l}from"./app.678d7e92.js";const u={},i=n("h1",{id:"\u4E00\u3001\u5B89\u88C5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E00\u3001\u5B89\u88C5","aria-hidden":"true"},"#"),s(" \u4E00\u3001\u5B89\u88C5")],-1),r={href:"https://curl.se/windows/",target:"_blank",rel:"noopener noreferrer"},d=l(`<h1 id="\u4E8C\u3001\u57FA\u7840\u77E5\u8BC6" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u57FA\u7840\u77E5\u8BC6" aria-hidden="true">#</a> \u4E8C\u3001\u57FA\u7840\u77E5\u8BC6</h1><h2 id="\u547D\u4EE4\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u547D\u4EE4\u683C\u5F0F" aria-hidden="true">#</a> \u547D\u4EE4\u683C\u5F0F</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token punctuation">[</span>options<span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u5E38\u7528\u9009\u9879" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u9009\u9879" aria-hidden="true">#</a> \u5E38\u7528\u9009\u9879</h2><table><thead><tr><th>short</th><th>long</th><th>params</th><th>comment</th></tr></thead><tbody><tr><td>-A</td><td>--user-agent</td><td><code>&lt;name&gt;</code></td><td><code>Send User-Agent &lt;name&gt; to server</code></td></tr><tr><td><code>-d</code></td><td>--data</td><td><code>&lt;data&gt;</code></td><td>HTTP POST data</td></tr><tr><td><code>-D</code></td><td></td><td><code>&lt;file&gt;</code></td><td>Write <code>Header</code> info to file</td></tr><tr><td>-f</td><td>--fail</td><td></td><td>Fail fast with no output on HTTP errors</td></tr><tr><td>-h</td><td>--help</td><td><code>&lt;category&gt;</code></td><td>Get help for commands</td></tr><tr><td>-i</td><td>--include</td><td></td><td>Include protocol response headers in the output</td></tr><tr><td><code>-o</code></td><td>--output</td><td><code>&lt;file&gt;</code></td><td>Write to file instead of <code>stdout</code></td></tr><tr><td>-O</td><td>--remote-name</td><td></td><td>Write output to a file named as the remote file</td></tr><tr><td><code>-s</code></td><td>--silent</td><td></td><td>Silent mode</td></tr><tr><td>-T</td><td>--upload-file</td><td><code>&lt;file&gt;</code></td><td>Transfer local FILE to destination</td></tr><tr><td>-u</td><td>--user</td><td><a href="user:password">user:password</a></td><td>Server user and password</td></tr><tr><td>-v</td><td>--verbose</td><td></td><td>Make the operation more talkative</td></tr><tr><td>-V</td><td>--version</td><td></td><td>Show version number and quit</td></tr></tbody></table><h1 id="\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B" aria-hidden="true">#</a> \u5B9E\u4F8B</h1><h2 id="post\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#post\u8BF7\u6C42" aria-hidden="true">#</a> POST\u8BF7\u6C42</h2><p>\u5728\u53D1\u9001POST\u8BF7\u6C42\u65F6\uFF0C\u5BF9\u4E8EJSON\u5B57\u7B26\u4E32\uFF0C\u8981\u8BB0\u5F97\u7528\u53CD\u659C\u6760\uFF01\u6BD4\u5982\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -X POST -d &quot;{\\&quot;name\\&quot;:\\&quot;tom\\&quot;}&quot; http://cloud.bmob.cn/72e3342dbed48706/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>\u5B9E\u6D4B\u53D1\u73B0\u6839\u672C\u4E0D\u80FD\u7528<code>-d &#39;{\\&quot;name\\&quot;:\\&quot;tom\\&quot;}&#39;</code>\u8FD9\u79CD\u529E\u6CD5\u6765\u7B80\u5316\uFF01</p></blockquote><h2 id="\u4E0B\u8F7D\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4E0B\u8F7D\u6587\u4EF6" aria-hidden="true">#</a> \u4E0B\u8F7D\u6587\u4EF6</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-o</span> a.txt http://a.com/a.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="\u5E38\u89C1\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u95EE\u9898" aria-hidden="true">#</a> \u5E38\u89C1\u95EE\u9898</h1><h2 id="_1-\u5728powershell\u4E2D\u4F7F\u7528\u51FA\u73B0\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#_1-\u5728powershell\u4E2D\u4F7F\u7528\u51FA\u73B0\u5F02\u5E38" aria-hidden="true">#</a> 1. \u5728PowerShell\u4E2D\u4F7F\u7528\u51FA\u73B0\u5F02\u5E38\uFF1F</h2><p>\u5F53\u6211\u5728<code>ps(powershell)</code>\u4E2D\u8C03\u7528<code>curl</code>\u5E76\u8F93\u5165\u53C2\u6570\u65F6\uFF0C\u59CB\u7EC8\u63D0\u793A\u4E0D\u5BF9\uFF0CWhat\uFF1F</p><p>\u4E8E\u662F\u4F7F\u7528<code>get-help</code>\u67E5\u8BE2\uFF0C\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token function">PS</span> C:\\Users\\sx00x&gt; <span class="token function">Get-Help</span> curl

\u540D\u79F0
    <span class="token function">Invoke-WebRequest</span>

\u8BED\u6CD5
    <span class="token function">Invoke-WebRequest</span> <span class="token punctuation">[</span><span class="token operator">-</span>Uri<span class="token punctuation">]</span> &lt;uri&gt;  <span class="token punctuation">[</span>&lt;CommonParameters&gt;<span class="token punctuation">]</span>

\u522B\u540D
    <span class="token function">iwr</span>
    wget
    curl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u6765\uFF0C<code>curl</code>\u4E3A<code>ps</code>\u539F\u751F\u547D\u4EE4<code>Invoke-WebRequest</code>\u7684\u522B\u540D\u3002</p><p>\u60F3\u8981\u8C03\u7528<code>curl</code>\uFF0C\u5E94\u5728<code>ps</code>\u4E2D\u8F93\u5165\uFF1A<code>curl.exe</code>\u53CA\u53C2\u6570\uFF0C\u95EE\u9898\u89E3\u51B3\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PS C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>sx00x<span class="token operator">&gt;</span> curl.exe <span class="token parameter variable">-X</span> POST --data-urlencode <span class="token assign-left variable">a</span><span class="token operator">=</span>b --data-urlencode <span class="token assign-left variable">c</span><span class="token operator">=</span>d http://localhost:8080
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-\u4E0D\u652F\u6301compressed" tabindex="-1"><a class="header-anchor" href="#_2-\u4E0D\u652F\u6301compressed" aria-hidden="true">#</a> 2. \u4E0D\u652F\u6301compressed</h2><p>windows10\u7528\u6237\u53EF\u80FD\u4F1A\u9047\u5230\u5982\u4E0B\u9519\u8BEF\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>curl: option --compressed: the installed libcurl version doesn&#39;t support this
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u89E3\u51B3\u65B9\u6CD5\uFF1A\u5C06<code>curl</code>\u7684<code>bin</code>\u76EE\u5F55\u8DEF\u5F84\u6DFB\u52A0\u5230\u7CFB\u7EDF\u73AF\u5883\u53D8\u91CFPath\u4E2D\uFF0C\u6CE8\u610F\uFF0C\u5FC5\u987B\u5C06\u73AF\u5883\u53D8\u91CF\u4E0A\u79FB\u81F3<code>\u7B2C\u4E00\u4E2A</code>\u3002</p><h1 id="\u8FDB\u9636" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u9636" aria-hidden="true">#</a> \u8FDB\u9636</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  Application<span class="token punctuation">,</span>
  helpers<span class="token punctuation">,</span>
  Router<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;https://deno.land/x/oak@v10.4.0/mod.ts&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

router
  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&quot;Home Page.&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6D4B\u8BD5URL: http://localhost/book?name=abc&amp;id=123</span>
  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/book&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> params <span class="token operator">=</span> helpers<span class="token punctuation">.</span><span class="token function">getQuery</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">mergeParams</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&quot;name=&quot;</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot;  id=&quot;</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6D4B\u8BD5URL: http://localhost/book/abc</span>
  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/book/:name&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> params <span class="token operator">=</span> helpers<span class="token punctuation">.</span><span class="token function">getQuery</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">mergeParams</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&quot;name = &quot;</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6D4B\u8BD5: curl -X POST -d &#39;hello world&#39; http://localhost/text</span>
  <span class="token comment">// \u6D4B\u8BD5: curl -X POST -d &#39;{&quot;name&quot;:&quot;abc&quot;,&quot;id&quot;:123}&#39; http://localhost/text</span>
  <span class="token comment">// \u540C\u6837\u7684json\u6570\u636E\uFF0C\u4E0D\u540C\u7684\u65B9\u5F0F\u89E3\u6790\u51FA\u6765\u7ED3\u679C\u662F\u4E0D\u4E00\u6837\u7684\u3002\u4E00\u4E2A\u662F\u5B57\u7B26\u4E32\uFF0C\u4E00\u4E2A\u662Fjson\u5BF9\u8C61</span>
  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/text&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> request <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">;</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span>body <span class="token operator">=</span> text<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6D4B\u8BD5: curl -X POST -d &#39;{&quot;name&quot;:&quot;abc&quot;,&quot;id&quot;:123}&#39; http://localhost/json</span>
  <span class="token comment">// \u6D4B\u8BD5: curl -X POST -d &#39;hello world&#39; http://localhost/json # \u4F1A\u51FA\u9519\uFF01\uFF01\uFF01</span>
  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/json&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> request <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">;</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> json<span class="token punctuation">.</span>name<span class="token punctuation">,</span> json<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span>body <span class="token operator">=</span> json<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6D4B\u8BD5: curl -X POST -d @data.json http://localhost/jsonFile  # \u5982\u679C\u5B57\u6BB5\u8F83\u591A\uFF0C\u53EF\u4EE5\u76F4\u63A5\u63D0\u4EA4json\u6587\u4EF6</span>
  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/jsonFile&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> request <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">;</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> jsonFile <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>jsonFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span>body <span class="token operator">=</span> jsonFile<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Server listen on port 80.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">80</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26);function k(v,m){const a=e("ExternalLinkIcon");return o(),p("div",null,[i,n("p",null,[n("a",r,[s("Curl \u5B98\u7F51"),c(a)])]),d])}const h=t(u,[["render",k],["__file","curl.html.vue"]]);export{h as default};
